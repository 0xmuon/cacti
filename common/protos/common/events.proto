syntax = "proto3";

package common.events;

import "common/query.proto";

option java_package = "com.weaver.protos.common.events";
option go_package = "github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go/common";

enum EventType {
  LEDGER_STATE = 0;
  ASSET_LOCK = 1;
  ASSET_CLAIM = 2;
}

message EventMatcher {
    EventType event_type = 1;
    string event_class_id = 2;
    string transaction_ledger_id = 3;
    string transaction_contract_id = 4;
    string transaction_func = 5;
}
message EventSubscription {
  EventMatcher event_matcher = 1;
  common.query.Query query = 2;
}
message EventSubscriptionState {
  enum STATUS {
    // pending ACK from remote relay
    PENDING_ACK = 0;
    // Received ACK, waiting for event subscription confirmation from remote relay
    PENDING = 1;
    ERROR = 2;
    SUCCESS = 3;
  };
  string request_id = 1;
  STATUS status = 2;
  string message = 3;
  EventMatcher event_matcher = 4;
  EventPublication event_publication_spec = 5;
}

message ContractTransaction {
  string driver_id = 1;
  string ledger_id = 2;
  string contract_id = 3;
  string func = 4;
  repeated bytes args = 5;
  uint64 replace_arg_index = 6;
}

message EventPublication {
  oneof publication_target {
    ContractTransaction ctx = 1;
    string app_url = 2;
  }
}